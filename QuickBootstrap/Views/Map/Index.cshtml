@{
    ViewBag.Title = "地图";
}

@section scripts{
    @Scripts.Render("http://api.map.baidu.com/api?v=2.0&ak=SSC5M3AFkxWqbgXLDpItGi8g")
    <script src="@Url.Content("~/scripts/overlay.js")" type="text/javascript"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/AreaRestriction/1.2/src/AreaRestriction_min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
    @Scripts.Render("http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer.js")
    <script src="/scripts/map.js" type="text/javascript"></script>
}

<div class="row">
    <div class="col-md-9" role="main">
        <ol class="breadcrumb">
            <li><a href="/">管理后台</a></li>
            <li class="active"><a href="/UserManage">地图热点</a></li>
        </ol>
        <div class="bs-docs-example" id='map'>
        </div>
    </div>

    <div class="col-md-3" role="complementary">
        <div class="list-group">
            <a href="#" class="list-group-item active">设备管理</a>
            <div id="using_json"></div>

            @*<a href="/UserManage" class="list-group-item">
                    <span class="glyphicon glyphicon-list"></span> 用户列表
                </a>
                <a href="/UserManage/Create" class="list-group-item">
                    <span class="glyphicon glyphicon-plus"></span> 新建用户
                </a>
                <a href="/UserManage/RoleList" class="list-group-item">
                    <span class="glyphicon glyphicon-list"></span> 角色列表
                </a>
                <a href="/UserManage/CreateRole" class="list-group-item">
                    <span class="glyphicon glyphicon-plus"></span> 新建角色
                </a>*@
        </div>
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">帮助提示</h3>
            </div>
            <div class="panel-body">
                亲，本页面编辑模式非响应式操作，你懂的！
            </div>
        </div>
    </div>
</div>


@section import{
    <script src="/scripts/common.js" type="text/javascript"></script>

    <script type="text/javascript">
        window.map = false;
        window.flag = 0;                       // edit 1 ，load 0
        window.markers = [];
        window.markerClusterer = false;

        initMap("map");
        initData();

        function initData() {
            /* TODO　从json 文件中加载json */
            var data = [
                        {
                            'text': 'Simple root node',
                            'type':'group'                  // 自定义类型type
                        },
                        {
                            'text': 'Root node 2',
                            'type':'group',                 // 自定义类型type
                            'state': {
                                'opened': true
                            },
                            'children': [
                              { 'text': 'Child 1' },
                              'Child 2'
                            ]
                        }
            ];

            createTree('using_json', data, {
                'select_node.jstree': function (e, data) {
                    var obj = data.node;
                    $('#using_json').jstree("toggle_node", obj);
                    if (obj.parent === '#') {
                        if (window.map && window.map.reset)
                            map.reset();
                    }
                    if (obj.li_attr.attr === 'd' && obj.li_attr.lng && obj.li_attr.lat) {
                        var pt = new BMap.Point(obj.li_attr.lng, obj.li_attr.lat);
                        map.setCenter(pt);
                        map.setZoom(13);
                    }
                },
                'set_state.jstree':function() {
                    console.log('ssssss');
                },
                'open_node.jstree': function (e, data) {
                    var obj = data.node;
                    $.jstree.reference("#using_json").set_icon(obj, 'glyphicon glyphicon-folder-open');
                },
                'close_node.jstree': function (e, data) {
                    var obj = data.node;
                    $.jstree.reference("#using_json").set_icon(obj, 'glyphicon glyphicon-folder-close');
                }
            }, {
                'dnd_stop.vakata': function (e, data) {
                    if (data.data.jstree && flag == 1) {
                        var obj = $('#GroupDeviceList').jstree("get_node", data.data.nodes[0]);
                        var id = obj.li_attr.id.substring(0, 36);
                        //  最近使用的设备已经被拖拽
                        if (obj.li_attr.id.indexOf('Cache') >= 0) {
                            var obj = $('#GroupDeviceList').jstree("get_node", id);
                            if (obj.li_attr.lat && obj.li_attr.lng) {
                                Alert.TipInside('该节点已经添加。');
                                return;
                            }
                        }

                        //  已经标记有地理位置信息或者非设备的节点 不允许拖拽
                        if (obj.li_attr.attr != 'd')
                            return false;
                        if (obj.li_attr.lat && obj.li_attr.lng) {
                            Alert.TipInside('该节点已经添加。');
                            return false;
                        }
                        if (!map) {
                            return false;
                        }
                        //  从拖拽释放像素位置求得地理位置信息	
                        var pt = false;
                        var x = data.event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
                        var y = data.event.clientY + document.body.scrollTop + document.documentElement.scrollTop;
                        var position = $('#allmap').position();

                        var x1 = x - position.left;
                        var y1 = y - position.top;

                        var x2 = x - (position.left + $('#allmap').width());
                        var y2 = y - (position.left + $('#allmap').height());
                        if ((x1 < 0 || y1 < 0) || (x2 > 0 || y2 > 0)) {
                            Alert.TipInside('拖拽无效');
                            return false;
                        }

                        pt = map.pixelToPoint(new BMap.Pixel(x1, y1));
                        obj.li_attr.DN = obj.text;
                        if (createMarker(pt, obj) === true) {
                            updataUsedNode(id, pt);
                            return true;
                        }
                    }

                },
                'context_show.vakata': function (e, data) {         //  本事件处理针对 节点状态是否显示右键菜单的需求
                    console.log(data.reference);
                    var obj = $.jstree.reference("#GroupDeviceList").get_node(data.reference);
                    if (obj.li_attr.attr != 'd')
                        $(data.element).hide();
                    if (!obj.li_attr.lat || !obj.li_attr.lng)
                        $(data.element).hide();
                }
            }
            );
        };

    </script>
}

